https://www.cnblogs.com/evescn/p/16203350.html
1、要生成集群key
  mkdir -p data/mongodb
  openssl rand -base64 756 > ./data/mongodb/mongodb.key
  chmod 400 ./data/mongodb/mongodb.key
  mkdir ./data/mongodb/{db{1,2,3},log{1,2,3},configdb{1,2,3}} -pv
  sudo chown lxd:lxd ./data/mongodb/mongodb.key

  

2、mongodb.yml
version: "3"

services:
  #主节点
  mongodb1:
    image: mongo:6.0
    container_name: mongo1
    restart: unless-stopped
    ports:
      - 27017:27017
    environment:
      TZ: Asia/Shanghai
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 123456
    command: mongod --replSet rs0 --keyFile /mongodb.key
    #command: --config /etc/mongo/mongod.conf

    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./data/mongodb/db1:/data/db
      - ./data/mongodb/log1:/data/log
      - ./data/mongodb/configdb1:/data/configdb
      - ./data/mongodb/mongodb.key:/mongodb.key:ro
      #- ./data/mongodb/mongod.conf:/etc/mongo/mongod.conf:ro
    networks:
      - mongo_net
    entrypoint:
      - bash
      - -c
      - |
        chmod 400 /mongodb.key
        chown 999:999 /mongodb.key
        exec docker-entrypoint.sh $$@
  # 副节点
  mongodb2:
    image: mongo:6.0
    container_name: mongo2
    restart: unless-stopped
    ports:
      - 27018:27017
    environment:
      TZ: Asia/Shanghai
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 123456
    command: mongod --replSet rs0 --keyFile /mongodb.key
    volumes:
      - /etc/localtime:/etc/localtime
      - ./data/mongodb/db2:/data/db
      - ./data/mongodb/log2:/data/log
      - ./data/mongodb/configdb2:/data/configdb
      - ./data/mongodb/mongodb.key:/mongodb.key:ro
    networks:
      - mongo_net
    entrypoint:
      - bash
      - -c
      - |
        chmod 400 /mongodb.key
        chown 999:999 /mongodb.key
        exec docker-entrypoint.sh $$@
  # 副节点
  mongodb3:
    image: mongo:6.0
    container_name: mongo3
    restart: unless-stopped
    ports:
      - 27019:27017
    environment:
      TZ: Asia/Shanghai
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 123456
    command: mongod --replSet rs0 --keyFile /mongodb.key
    volumes:
      - /etc/localtime:/etc/localtime
      - ./data/mongodb/db3:/data/db
      - ./data/mongodb/log3:/data/log
      - ./data/mongodb/configdb3:/data/configdb
      - ./data/mongodb/mongodb.key:/mongodb.key:ro
    networks:
      - mongo_net
    entrypoint:
      - bash
      - -c
      - |
        chmod 400 /mongodb.key
        chown 999:999 /mongodb.key
        exec docker-entrypoint.sh $$@
networks:
  mongo_net:
    name: mongo_net
    driver: bridge
###############################################################
3、创建mongod
docker-compose up -d


4、配置集群   (如果在origin中不要做，不然不好改init配置，这个现在不明白)
进入mongo1
docker exec -it mongo1 bash
mongosh -u root -p 123456
# docker exec -it mongo1 mongosh


注：单主机模式部署 3副本集 添加节点必须使用宿主机IP+PORT，
使用容器内部IP的情况下代码层面连接到 mongodb-cluster 集群，
获取到的集群地址信息为 docker 容器内部 IP，
若业务代码没有部署在 mongodb 主机则无法访问



config={_id:"rs0",members:[ 
{_id:0,host:"192.168.0.192:27017"}, 
{_id:1,host:"192.168.0.192:27018"}, 
{_id:2,host:"192.168.0.192:27019"}] 
}

rs.initiate(config)
cfg=rs.conf()

rs.status()
rs.printReplicationInfo()
































======================================================
2、配置文件
 /home/deploy/docker/base/data/mongo/mongod.conf
systemLog:
  path: /data/log/mongod.log
  logAppend: true
  destination: file
net:
  port: 27017
  bindIpAll: true
security:
  keyFile: /etc/mongo/mongod.key
  authorization: enabled
  transitionToAuth: true
storage:
  dbPath: /data/db
  directoryPerDB: true
  engine: wiredTiger
  wiredTiger:
    engineConfig:
      cacheSizeGB: 2
      journalCompressor: snappy
      directoryForIndexes: true
    collectionConfig:
      blockCompressor: snappy
    indexConfig:
      prefixCompression: true
operationProfiling:
  mode: slowOp
  slowOpThresholdMs: 500
replication:
  replSetName: mongoRS
==========================================================
3、mongo.yaml
#需要把docker/base/data/mongo/下面的rs*,log*目录的权限全放开

version: '3.8'
networks:
  mongo_net:
    name: mongo_net
    driver: bridge
services:
  mongo1:
    container_name: mongo1
    restart: unless-stopped
    image: mongo:6.0

    networks:
      - mongo_net
    environment:
      TZ: Asia/Shanghai
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 123456
    command: --config /etc/mongo/mongod.conf
    ports:
      - 27017:27017
    volumes:
      - ./data/mongo/mongod.key:/etc/mongo/mongod.key:ro
      - ./data/mongo/mongod.conf:/etc/mongo/mongod.conf:ro
      - ./data/mongo/rs1:/data/db
      - ./data/mongo/log1:/data/log
  mongo2:
    container_name: mongo2
    restart: unless-stopped
    image: mongo:6.0

    networks:
      - mongo_net
    environment:
      TZ: Asia/Shanghai
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 123456
    command: --config /etc/mongo/mongod.conf
    ports:
      - 27018:27017
    volumes:
      - ./data/mongo/mongod.key:/etc/mongo/mongod.key:ro
      - ./data/mongo/mongod.conf:/etc/mongo/mongod.conf:ro
      - ./data/mongo/rs2:/data/db
      - ./data/mongo/log2:/data/log
    depends_on:
      - mongo1
  mongo3:
    container_name: mongo3
    restart: unless-stopped
    image: mongo:6.0

    networks:
      - mongo_net
    environment:
      TZ: Asia/Shanghai
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 123456
    command: --config /etc/mongo/mongod.conf
    ports:
      - 27019:27017
    volumes:
      - ./data/mongo/mongod.key:/etc/mongo/mongod.key:ro
      - ./data/mongo/mongod.conf:/etc/mongo/mongod.conf:ro
      - ./data/mongo/rs3:/data/db
      - ./data/mongo/log3:/data/log
    depends_on:
      - mongo1
  mongo-init:
    image: mongo:6.0
    networks:
      - mongo_net
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    entrypoint: [ "mongosh", "--host", "mongo1", "--username", "root", "--password", "123456", "--authenticationDatabase", "admin", "--eval", "rs.initiate( { _id: 'mongoRS', members: [ { _id: 0, host: 'mongo1:27017' }, { _id: 1, host: 'mongo2:27017' }, { _id: 2, host: 'mongo3:27017' } ] } )"]

===============================================================

services:
  mongo1:
    container_name: mongo1
    restart: unless-stopped
    image: mongo:6.0
    environment:
      TZ: Asia/Shanghai
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 123456
    command: --config /etc/mongo/mongod.conf
    ports:
      - 27017:27017
    volumes:
      - ./data/mongo/mongod.key:/etc/mongo/mongod.key:ro
      - ./data/mongo/mongod.conf:/etc/mongo/mongod.conf:ro
      - ./data/mongo/rs1:/data/db
      - ./data/mongo/log1:/data/log
  mongo2:
    container_name: mongo2
    restart: unless-stopped
    image: mongo:6.0
    environment:
      TZ: Asia/Shanghai
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 123456
    command: --config /etc/mongo/mongod.conf
    ports:
      - 27018:27017
    volumes:
      - ./data/mongo/mongod.key:/etc/mongo/mongod.key:ro
      - ./data/mongo/mongod.conf:/etc/mongo/mongod.conf:ro
      - ./data/mongo/rs2:/data/db
      - ./data/mongo/log2:/data/log
  mongo3:
    container_name: mongo3
    restart: unless-stopped
    image: mongo:6.0
    environment:
      TZ: Asia/Shanghai
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 123456
    command: --config /etc/mongo/mongod.conf
    ports:
      - 27019:27017
    volumes:
      - ./data/mongo/mongod.key:/etc/mongo/mongod.key:ro
      - ./data/mongo/mongod.conf:/etc/mongo/mongod.conf:ro
      - ./data/mongo/rs3:/data/db
      - ./data/mongo/log3:/data/log
